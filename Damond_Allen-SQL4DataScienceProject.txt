/* Part 1: Yelp Dataset Profiling and Understanding
	1.) Profiler the data by finding the number of records for the columns below:
		i. Attribute table = 10,000
		ii. Business table = 10,000
		iii. Category table = 10,000
		iv. Checkin table = 10,000
		v. elite_years table = 10,000
		vi. friend table = 10,000
		vii. hours table = 10,000
		viii. photo table = 10,000
		ix. review table = 10,000
		x. tip table = 10,000
		xi. user table = 10,000

	The following SQL code was used to obtain the answers to question 1: 		
		
		i.    SELECT Count(*) AS Num_Of_Records
		      FROM attribute
	------------------------------------------------		  
		ii.   SELECT Count (*) AS Num_Of_Records
		      FROM business
    ------------------------------------------------
	    iii.  SELECT Count (*) AS Num_Of_Records
			  FROM category
    ------------------------------------------------
        iv.   SELECT Count (*) AS Num_Of_Records
              FROM Checkin
    ------------------------------------------------
		v.    SELECT Count (*) AS Num_Of_Records
		      FROM elite_years
    ------------------------------------------------
		vi.   SELECT Count (*) AS Num_Of_Records
			  FROM friend
    ------------------------------------------------
		vii.  SELECT Count (*) AS Num_Of_Records
			  FROM hours
    ------------------------------------------------
		viii. SELECT Count (*) AS Num_Of_Records
			  FROM photo
    ------------------------------------------------
		ix.   SELECT Count (*) AS Num_Of_Records
			  FROM review
	------------------------------------------------
		x.    SELECT Count (*) AS Num_Of_Records
		      FROM tip
    ------------------------------------------------
		xi.   SELECT Count (*) AS Num_Of_Records
			  FROM user 
    ------------------------------------------------	

    2.) Find the total distinct records by either the foreign key or primary key for each table. 
		i. Business = 10,000 (id)
		ii. Hours = 1,562 (business_id)
		iii. Category = 2,643 (business_id)
		iv. Attribute = 1,115 (business_id)
		v. Review = 10,000 (id)
		vi. Checkin = 493 (business_id)
		vii. Photo = 10,000 (id)
		viii. Tip = 537 (user_id)
		ix. User = 10,000 (id) 
		x. Friend = 11 (user_id)
		xi. Elite_years = 2,780 (user_id)

	The following SQL code was used to obtain the answers to question 2:

        i.    SELECT Count(DISTINCT id) AS Num_Of_Unique_Records
			  FROM business
	---------------------------------------------------------------------	  
		ii.   SELECT Count(DISTINCT business_id) AS Num_Of_Unique_Records
			  FROM hours
    ---------------------------------------------------------------------
	    iii.  SELECT Count(DISTINCT business_id) AS Num_Of_Unique_Records
			  FROM category
    ---------------------------------------------------------------------
        iv.   SELECT Count(DISTINCT business_id) AS Num_Of_Unique_Records
              FROM attribute
    ---------------------------------------------------------------------
		v.    SELECT Count(DISTINCT id) AS Num_Of_Unique_Records
			  FROM review
    ---------------------------------------------------------------------
		vi.   SELECT Count(DISTINCT business_id) AS Num_Of_Unique_Records
			  FROM checkin
    ---------------------------------------------------------------------
		vii. SELECT Count(DISTINCT id) AS Num_Of_Unique_Records
			 FROM photo
    ---------------------------------------------------------------------
		viii. SELECT Count(DISTINCT user_id) AS Num_Of_Unique_Records
			  FROM tip
    ---------------------------------------------------------------------
		ix.   SELECT Count(DISTINCT id) AS Num_Of_Unique_Records
			  FROM user
	---------------------------------------------------------------------
		x.    SELECT Count(DISTINCT user_id) AS Num_Of_Unique_Records
			  FROM friend
    ---------------------------------------------------------------------
		xi.   SELECT Count(DISTINCT user_id) AS Num_Of_Unique_Records
			  FROM elite_years
    ---------------------------------------------------------------------

	3.) Are there any columns with null values in the Users table? Indicate "yes," or "no."
			Answer: No
			
		SQL code used to arrive at answer:
			SELECT *
			FROM user
			WHERE id = NULL
				OR name = NULL
				OR review_count = NULL
				OR yelping_since = NULL
				OR useful = NULL
				OR funny = NULL
				OR cool = NULL
				OR fans = NULL
				OR average_stars = NULL
				OR compliment_hot = NULL
				OR compliment_more = NULL
				OR compliment_profile = NULL
				OR compliment_cute = NULL
				OR compliment_list = NULL
				OR compliment_note = NULL
				OR compliment_plain = NULL
				OR compliment_cool = NULL
				OR compliment_funny = NULL
				OR compliment_writer = NULL
				OR compliment_photos = NULL

	4. For each table and column listed below, display the smallest (minimum), largest (maximum), and average (mean) value for the following fields:

		i. Table: Review, Column: Stars
	
			min: 1		max: 5		avg: 3.7082
		
	
		ii. Table: Business, Column: Stars
	
			min: 1		max: 5		avg: 3.6549
		
	
		iii. Table: Tip, Column: Likes
	
			min: 0		max: 2		avg: 0.0144
		
	
		iv. Table: Checkin, Column: Count
	
			min: 1		max: 53		avg: 1.9414
		
	
		v. Table: User, Column: Review_count
	
			min: 0		max: 2000	avg: 24.2995

	The following SQL code was used to answer question 4
		i.   SELECT min(stars)
		     FROM Review
			------------------------
		     SELECT max(stars)
		     FROM Review
		    ------------------------
		     SELECT avg(stars)
		     FROM Review
		    ------------------------
		ii.  SELECT min(stars)
			 FROM business
			------------------------
			 SELECT max(stars)
			 FROM business
			------------------------
			 SELECT avg(stars)
			 FROM business
			------------------------
		iii. SELECT min(likes)
			 FROM tip
			------------------------
			 SELECT max(likes)
			 FROM tip
			------------------------
			 SELECT avg(likes)
			 FROM tip
			------------------------
		iv. SELECT min(count)
			FROM checkin
			------------------------
			SELECT max(count)
			FROM checkin
			------------------------
			SELECT avg(count)
			FROM checkin
			------------------------
		v.  SELECT min(review_count)
			FROM user
			------------------------
			SELECT max(review_count)
			FROM user
			------------------------
			SELECT avg(review_count)
			FROM user

	5. List the cities with the most reviews in descending order:

		SQL code used to arrive at answer:
			SELECT City
				,sum(review_count) AS Total_Reviews
			FROM Business
			GROUP BY City
			ORDER BY Total_Reviews DESC Limit 20;
	
		Copy and Paste the Result Below:
			
			+-----------------+---------------+
			| city            | Total_Reviews |
			+-----------------+---------------+
			| Las Vegas       |         82854 |
			| Phoenix         |         34503 |
			| Toronto         |         24113 |
			| Scottsdale      |         20614 |
			| Charlotte       |         12523 |
			| Henderson       |         10871 |
			| Tempe           |         10504 |
			| Pittsburgh      |          9798 |
			| Montréal        |          9448 |
			| Chandler        |          8112 |
			| Mesa            |          6875 |
			| Gilbert         |          6380 |
			| Cleveland       |          5593 |
			| Madison         |          5265 |
			| Glendale        |          4406 |
			| Mississauga     |          3814 |
			| Edinburgh       |          2792 |
			| Peoria          |          2624 |
			| North Las Vegas |          2438 |
			| Markham         |          2352 |
			+-----------------+---------------+
			
	6. Find the distribution of star ratings to the business in the following cities:

		i. Avon

			SQL code used to arrive at answer:
				SELECT Stars AS Star_Rating
					,count(stars) AS Count
				FROM Business
				WHERE city = 'Avon'
				GROUP BY Star_Rating

			Copy and Paste the Resulting Table Below (2 columns – star rating and count):
				+-------------+-------+
				| Star_Rating | Count |
				+-------------+-------+
				|         1.5 |     1 |
				|         2.5 |     2 |
				|         3.5 |     3 |
				|         4.0 |     2 |
				|         4.5 |     1 |
				|         5.0 |     1 |
				+-------------+-------+

		ii. Beachwood

			SQL code used to arrive at answer:
				Select Stars AS Star_Rating
					,count (stars) AS Count
				From Business
				Where city ='Beachwood'
				Group By Star_Rating

			Copy and Paste the Resulting Table Below (2 columns – star rating and count):
				+-------------+-------+
				| Star_Rating | Count |
				+-------------+-------+
				|         2.0 |     1 |
				|         2.5 |     1 |
				|         3.0 |     2 |
				|         3.5 |     2 |
				|         4.0 |     1 |
				|         4.5 |     2 |
				|         5.0 |     5 |
				+-------------+-------+
				
	7. Find the top 3 users based on their total number of reviews:
		
			SQL code used to arrive at answer:
				SELECT name
					,review_count
				FROM user
				ORDER BY review_count DESC Limit 3;
		
			Copy and Paste the Result Below:
				+--------+--------------+
				| name   | review_count |
				+--------+--------------+
				| Gerald |         2000 |
				| Sara   |         1629 |
				| Yuri   |         1339 |
				+--------+--------------+
				
	8. Does posing more reviews correlate with more fans? No
			SELECT name
				,review_count
				,fans
			FROM user
			ORDER BY review_count DESC Limit 25;			

	Please explain your findings and interpretation of the results:
			The table below shows users with a high number of review_counts and a low number of fans.
			
			+-----------+--------------+------+
			| name      | review_count | fans |
			+-----------+--------------+------+
			| Gerald    |         2000 |  253 |
			| Sara      |         1629 |   50 |
			| Yuri      |         1339 |   76 |
			| .Hon      |         1246 |  101 |
			| William   |         1215 |  126 |
			| Harald    |         1153 |  311 |
			| eric      |         1116 |   16 |
			| Roanna    |         1039 |  104 |
			| Mimi      |          968 |  497 |
			| Christine |          930 |  173 |
			| Ed        |          904 |   38 |
			| Nicole    |          864 |   43 |
			| Fran      |          862 |  124 |
			| Mark      |          861 |  115 |
			| Christina |          842 |   85 |
			| Dominic   |          836 |   37 |
			| Lissa     |          834 |  120 |
			| Lisa      |          813 |  159 |
			| Alison    |          775 |   61 |
			| Sui       |          754 |   78 |
			| Tim       |          702 |   35 |
			| L         |          696 |   10 |
			| Angela    |          694 |  101 |
			| Crissy    |          676 |   25 |
			| Lyn       |          675 |   45 |
			+-----------+--------------+------+
	
	9. Are there more reviews with the word "love" or with the word "hate" in them?
		Answer: Love
		
		SQL code used to arrive at answer:
			SELECT count(TEXT) AS Love
				,(
					SELECT count(TEXT)
					FROM review
					WHERE TEXT LIKE "%hate%"
					) AS Hate
			FROM review
			WHERE TEXT LIKE "%love%"
	
	10. Find the top 10 users with the most fans:
		
		SQL code used to arrive at answer:
			SELECT name
				,fans
			FROM user
			ORDER BY fans DESC limit 10;	
	
		Copy and Paste the Result Below:
			+-----------+------+
			| name      | fans |
			+-----------+------+
			| Amy       |  503 |
			| Mimi      |  497 |
			| Harald    |  311 |
			| Gerald    |  253 |
			| Christine |  173 |
			| Lisa      |  159 |
			| Cat       |  133 |
			| William   |  126 |
			| Fran      |  124 |
			| Lissa     |  120 |
			+-----------+------+	
	
	11. Is there a strong relationship (or correlation) between having a high number of fans and being listed as "useful" or "funny?" 
		Out of the top 10 users with the highest number of fans, what percent are also listed as “useful” or “funny”?

		Key:
		0% - 25% - Low relationship
		26% - 75% - Medium relationship
		76% - 100% - Strong relationship
	
			SQL code used to arrive at answer:
				SELECT name
					,fans
					,useful
					,funny
				FROM user
				ORDER BY fans DESC limit 10;	
	
			Copy and Paste the Result Below:
				+-----------+------+--------+--------+
				| name      | fans | useful |  funny |
				+-----------+------+--------+--------+
				| Amy       |  503 |   3226 |   2554 |
				| Mimi      |  497 |    257 |    138 |
				| Harald    |  311 | 122921 | 122419 |
				| Gerald    |  253 |  17524 |   2324 |
				| Christine |  173 |   4834 |   6646 |
				| Lisa      |  159 |     48 |     13 |
				| Cat       |  133 |   1062 |    672 |
				| William   |  126 |   9363 |   9361 |
				| Fran      |  124 |   9851 |   7606 |
				| Lissa     |  120 |    455 |    150 |
				+-----------+------+--------+--------+	
			Please explain your findings and interpretation of the results:
				There is a strong relationship between having a high number of fans and being listed as funny or useful.
				The table above shows that the top 10 users by number of fans are all listed as funny or useful. 

Part 2: Inferences and Analysis	
	
	1. Pick one city and category of your choice and group the businesses in that city or category by their overall star rating. 
	   Compare the businesses with 2-3 stars to the businesses with 4-5 stars and answer the following questions. Include your code.
	
		i. Do the two groups you chose to analyze have a different distribution of hours? 
			Yes, the restaurants with 2-3 stars are open 12 hrs a day, 7 days a week. 
			The restaurants with 4-5 stars are open during peak dining hours only. 


		ii. Do the two groups you chose to analyze have a different number of reviews?
			 No
            
		iii. Are you able to infer anything from the location data provided between these two groups? Explain.
			  Yes, the restaurants with 4-5 stars are in tourists areas.
			  the restaurants with 2-3 stars are in local neighborhoods; Locals rate tougher than tourists. 

		SQL code used for analysis:
			SELECT business.name
				,business.city
				,business.STATE
				,business.stars
				,business.review_count
				,business.neighborhood
				,CASE business.is_open
					WHEN '1'
						THEN 'Yes'
					WHEN '0'
						THEN 'No'
					END Stillopen
				,hours.hours
			FROM business
			LEFT JOIN category ON business.id = category.business_id
			LEFT JOIN hours ON business.id = hours.business_id
			WHERE business.city = 'Toronto'
				AND business.stars >= 2.0
				AND category.category = 'Restaurants'
			ORDER BY business.stars DESC	
	
	2. Group business based on the ones that are open and the ones that are closed. 
	   What differences can you find between the ones that are still open and the ones that are closed? 
	   List at least two differences and the SQL code you used to arrive at your answer.
		
		i. Difference 1: Neighborhood location, the restaurants still open are in heavily populated areas.
          
		ii. Difference 2: Available info, the restaurants that are closed have limited information available.
                  
		SQL code used for analysis:
			SELECT business.name
				,business.city
				,business.STATE
				,business.stars
				,business.review_count
				,business.neighborhood
				,CASE business.is_open
					WHEN '1'
						THEN 'Yes'
					WHEN '0'
						THEN 'No'
					END Stillopen
				,(
					SELECT count(value)
					FROM attribute
					WHERE business.id = attribute.business_id
					) AS total_attributes
			FROM business
			LEFT JOIN category ON business.id = category.business_id
			LEFT JOIN attribute ON business.id = attribute.business_id
			WHERE business.city = 'Toronto'
				AND business.stars >= 2.0
				AND category.category = 'Restaurants'
			GROUP BY business.name
			ORDER BY business.stars DESC

	3. For this last part of your analysis, you are going to choose the type of analysis you want to conduct on the Yelp dataset and are going to prepare the data for analysis.
	   Ideas for analysis include: Parsing out keywords and business attributes for sentiment analysis, clustering businesses to find commonalities or anomalies between them, 
	   predicting the overall star rating for a business, predicting the number of fans a user will have, and so on. These are just a few examples to get you started, 
	   so feel free to be creative and come up with your own problem you want to solve. Provide answers, in-line, to all of the following:
	
		i. Indicate the type of analysis you chose to do: 
			Is there a relationship between the number of categories and stars for a restarantt in toronto, canada 
         
         
		ii. Write 1-2 brief paragraphs on the type of data you will need for your analysis and why you chose that data:
               I will need a list of all the restaurants in toronto as well as their star rating and number of categories.            
                  
		iii. Output of your finished dataset:
				+--------------------+---------+-------+-------+--------------+------------------------+-----------+------------------+
				| name               | city    | state | stars | review_count | neighborhood           | Stillopen | total_categories |
				+--------------------+---------+-------+-------+--------------+------------------------+-----------+------------------+
				| Cabin Fever        | Toronto | ON    |   4.5 |           26 | High Park              | Yes       |               15 |
				| Sushi Osaka        | Toronto | ON    |   4.5 |            8 | Etobicoke              | Yes       |                4 |
				| Edulis             | Toronto | ON    |   4.0 |           89 | Niagara                | Yes       |                3 |
				| Mama Mia           | Toronto | ON    |   4.0 |            8 |                        | No        |                4 |
				| Naniwa-Taro        | Toronto | ON    |   4.0 |           75 | Willowdale             | Yes       |                2 |
				| The Kosher Gourmet | Toronto | ON    |   3.5 |            3 |                        | Yes       |                7 |
				| Big Smoke Burger   | Toronto | ON    |   3.0 |           47 | Downtown Core          | Yes       |                3 |
				| Pizzaiolo          | Toronto | ON    |   3.0 |           34 | Entertainment District | Yes       |                2 |
				| 99 Cent Sushi      | Toronto | ON    |   2.0 |            5 | Downtown Core          | No        |                3 |
				| Royal Dumpling     | Toronto | ON    |   1.5 |            4 | Willowdale             | Yes       |                2 |
				+--------------------+---------+-------+-------+--------------+------------------------+-----------+------------------+      
         
		iv. Provide the SQL code you used to create your final dataset:	
	
				SELECT business.name
					,business.city
					,business.STATE
					,business.stars
					,business.review_count
					,business.neighborhood
					,CASE business.is_open
						WHEN '1'
							THEN 'Yes'
						WHEN '0'
							THEN 'No'
						END Stillopen
					,(
						SELECT count(category)
						FROM category
						WHERE business.id = category.business_id
						) AS total_categories
				FROM business
				LEFT JOIN category ON business.id = category.business_id
				LEFT JOIN attribute ON business.id = attribute.business_id
				WHERE business.city = 'Toronto'
					AND category.category = 'Restaurants'
				GROUP BY business.name
				ORDER BY business.stars DESC
	

	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
*/





















































